server {
  listen 443 default_server ssl http2;
  server_name filterlists.com;

  include svr-includes/*;

  ssl_certificate /etc/nginx/cert/filterlists_cert.pem;
  ssl_certificate_key /etc/nginx/cert/filterlists_key.pem;

  add_header Content-Security-Policy "default-src 'none'; connect-src 'self'; img-src 'self' data:; manifest-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';" always;
  
  location ^~ /api/ {
    rewrite ^/api/(.*)$ /$1 break;
    proxy_pass         http://directory-api:80;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection keep-alive;
    proxy_set_header   Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
  }

  location / {
    proxy_pass         http://web:80;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection keep-alive;
    proxy_set_header   Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
  }
}

# Redirect http to https
server {
  listen 80 default_server;
  server_name filterlists.com;

  return 301 https://filterlists.com$request_uri;
}

# Redirect www to non-www
server {
  listen 80;
  listen 443 ssl http2;
  server_name www.filterlists.com;

  ssl_certificate /etc/nginx/cert/filterlists_cert.pem;
  ssl_certificate_key /etc/nginx/cert/filterlists_key.pem;

  return 301 https://filterlists.com$request_uri;
}