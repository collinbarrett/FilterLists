name: FilterLists Web Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - vNext
    paths:
      - web/**
      - api/**
      - .github/workflows/filterlists-web-azure-static-web-app.yml
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - vNext
    paths:
      - web/**
      - api/**
      - .github/workflows/filterlists-web-azure-static-web-app.yml

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  start_web_nx_agents:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    name: Start web nx agents
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Start nx agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  build_web:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Build web
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Derive SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - name: Install dependencies
        run: npm ci

      - name: Start nx cloud ci run
        run: npx nx-cloud start-ci-run

      - name: Lint nx workspace
        run: npx nx workspace-lint

      - name: Check format
        run: npx nx format:check

      - name: Lint
        run: npx nx affected:lint --parallel=3

      - name: Build
        run: npx nx run web:build --parallel=3
        # run: npx nx affected:build --parallel=3

      - name: Test
        run: npx nx affected:test --parallel=3 --ci --code-coverage

      - name: Stop nx cloud agents
        run: npx nx-cloud stop-all-agents

      - name: Copy SWA config to artifacts
        run: cp staticwebapp.config.json dist/apps/web/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-artifacts
          path: web/dist/apps/web/*

  build_api:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Build API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Publish
        run: dotnet publish -c Release -r win-x86 -p:PublishReadyToRun=true --no-self-contained

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: api-artifacts
          path: api/bin/Release/net6.0/win-x86/publish/*

  deploy_swa:
    needs: [build_web, build_api]
    name: Deploy SWA
    runs-on: ubuntu-latest
    steps:
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3

      - name: Deploy SWA
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.FILTERLISTS_WEB_AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          skip_app_build: true
          app_location: '/web-artifacts'
          skip_api_build: true
          api_location: '/api-artifacts'

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    name: Remove SWA staging for PR
    runs-on: ubuntu-latest
    steps:
      - name: Close PR
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.FILTERLISTS_WEB_AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: 'close'
